{
    "version": 3,
    "terraform_version": "0.11.14",
    "serial": 1,
    "lineage": "5fe4a04b-8144-dec9-19c7-db7a574a2848",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {},
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "artemis_deploy"
            ],
            "outputs": {},
            "resources": {
                "data.template_file.chart_values_template": {
                    "type": "template_file",
                    "depends_on": [
                        "local.template_all_values"
                    ],
                    "primary": {
                        "id": "1224bb52eb8b530ceeb57d724cfa441e0b2726e276b0eb0d3568739a134781ae",
                        "attributes": {
                            "id": "1224bb52eb8b530ceeb57d724cfa441e0b2726e276b0eb0d3568739a134781ae",
                            "rendered": "# Default values for artemis.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\nreplicaCount: 1\n\nimage:\n  repository: docker.fuchicorp.com/artemis-dev:0.3\n  pullPolicy: IfNotPresent\n\nnameOverride: \"\"\nfullnameOverride: \"\"\n\nservice:\n  type: ClusterIP\n  port: 80\n\ningress:\n  enabled: false\n  annotations:\n    kubernetes.io/ingress.class: nginx\n    cert-manager.io/cluster-issuer: letsencrypt-prod\n    # kubernetes.io/tls-acme: \"true\"\n  path: /\n  hosts:\n    - artemis.fuchicorp.com\n  tls: \n   - secretName: chart-artemis-tls\n     hosts:\n       - artemis.fuchicorp.com\n\nresources: {}\n  # We usually recommend not to specify default resources and to leave this as a conscious\n  # choice for the user. This also increases chances charts run on environments with little\n  # resources, such as Minikube. If you do want to specify resources, uncomment the following\n  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  # limits:\n  #  cpu: 100m\n  #  memory: 128Mi\n  # requests:\n  #  cpu: 100m\n  #  memory: 128Mi\n\nnodeSelector: {}\n\ntolerations: []\n\naffinity: {}\n",
                            "template": "# Default values for artemis.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\nreplicaCount: 1\n\nimage:\n  repository: ${deployment_image}\n  pullPolicy: IfNotPresent\n\nnameOverride: \"\"\nfullnameOverride: \"\"\n\nservice:\n  type: ClusterIP\n  port: 80\n\ningress:\n  enabled: false\n  annotations:\n    kubernetes.io/ingress.class: nginx\n    cert-manager.io/cluster-issuer: letsencrypt-prod\n    # kubernetes.io/tls-acme: \"true\"\n  path: /\n  hosts:\n    - ${deployment_endpoint}\n  tls: \n   - secretName: chart-artemis-tls\n     hosts:\n       - ${deployment_endpoint}\n\nresources: {}\n  # We usually recommend not to specify default resources and to leave this as a conscious\n  # choice for the user. This also increases chances charts run on environments with little\n  # resources, such as Minikube. If you do want to specify resources, uncomment the following\n  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  # limits:\n  #  cpu: 100m\n  #  memory: 128Mi\n  # requests:\n  #  cpu: 100m\n  #  memory: 128Mi\n\nnodeSelector: {}\n\ntolerations: []\n\naffinity: {}\n",
                            "vars.%": "4",
                            "vars.deployment_endpoint": "artemis.fuchicorp.com",
                            "vars.deployment_image": "docker.fuchicorp.com/artemis-dev:0.3",
                            "vars.deployment_name": "artemis-deployment",
                            "vars.env_vars": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.artemis_deploy.provider.template"
                },
                "local_file.deployment_values": {
                    "type": "local_file",
                    "depends_on": [
                        "data.template_file.chart_values_template"
                    ],
                    "primary": {
                        "id": "eb529f8d3719770f737927a7066ea8554ccbc38e",
                        "attributes": {
                            "content": "# Default values for artemis.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\nreplicaCount: 1\n\nimage:\n  repository: docker.fuchicorp.com/artemis-dev:0.3\n  pullPolicy: IfNotPresent\n\nnameOverride: \"\"\nfullnameOverride: \"\"\n\nservice:\n  type: ClusterIP\n  port: 80\n\ningress:\n  enabled: false\n  annotations:\n    kubernetes.io/ingress.class: nginx\n    cert-manager.io/cluster-issuer: letsencrypt-prod\n    # kubernetes.io/tls-acme: \"true\"\n  path: /\n  hosts:\n    - artemis.fuchicorp.com\n  tls: \n   - secretName: chart-artemis-tls\n     hosts:\n       - artemis.fuchicorp.com\n\nresources: {}\n  # We usually recommend not to specify default resources and to leave this as a conscious\n  # choice for the user. This also increases chances charts run on environments with little\n  # resources, such as Minikube. If you do want to specify resources, uncomment the following\n  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  # limits:\n  #  cpu: 100m\n  #  memory: 128Mi\n  # requests:\n  #  cpu: 100m\n  #  memory: 128Mi\n\nnodeSelector: {}\n\ntolerations: []\n\naffinity: {}",
                            "directory_permission": "0777",
                            "file_permission": "0777",
                            "filename": "/Users/fsadykov/Projects/fuchicorp-projects/artemis/deployments/terraform/.terraform/modules/6e15a86a8cc39e3ed9fa81333ce59cb7/fuchicorp-terraform-helm-chart-9666618/.cache/values.yaml",
                            "id": "eb529f8d3719770f737927a7066ea8554ccbc38e"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.artemis_deploy.provider.local"
                }
            },
            "depends_on": []
        }
    ]
}
